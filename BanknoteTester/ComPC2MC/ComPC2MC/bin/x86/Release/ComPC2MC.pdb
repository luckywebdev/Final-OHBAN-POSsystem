{"version":3,"sources":["../../../src/components/VCalendar/VCalendarWeekly.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VCalendarWeekly.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Components\nimport VBtn from '../VBtn'\n\n// Mixins\nimport CalendarBase from './mixins/calendar-base'\n\n// Util\nimport { getSlot } from '../../util/helpers'\nimport { weekNumber } from '../../util/dateTimeUtils'\nimport props from './util/props'\nimport {\n  createDayList,\n  getDayIdentifier,\n  createNativeLocaleFormatter,\n} from './util/timestamp'\nimport { CalendarTimestamp, CalendarFormatter } from 'vuetify/types'\n\n/* @vue/component */\nexport default CalendarBase.extend({\n  name: 'v-calendar-weekly',\n\n  props: props.weeks,\n\n  computed: {\n    staticClass (): string {\n      return 'v-calendar-weekly'\n    },\n    classes (): object {\n      return this.themeClasses\n    },\n    parsedMinWeeks (): number {\n      return parseInt(this.minWeeks)\n    },\n    days (): CalendarTimestamp[] {\n      const minDays = this.parsedMinWeeks * this.parsedWeekdays.length\n      const start = this.getStartOfWeek(this.parsedStart)\n      const end = this.getEndOfWeek(this.parsedEnd)\n\n      return createDayList(\n        start,\n        end,\n        this.times.today,\n        this.weekdaySkips,\n        Number.MAX_SAFE_INTEGER,\n        minDays\n      )\n    },\n    todayWeek (): CalendarTimestamp[] {\n      const today = this.times.today\n      const start = this.getStartOfWeek(today)\n      const end = this.getEndOfWeek(today)\n\n      return createDayList(\n        start,\n        end,\n        today,\n        this.weekdaySkips,\n        this.parsedWeekdays.length,\n        this.parsedWeekdays.length\n      )\n    },\n    monthFormatter (): CalendarFormatter {\n      if (this.monthFormat) {\n        return this.monthFormat as CalendarFormatter\n      }\n\n      const longOptions = { timeZone: 'UTC', month: 'long' }\n      const shortOptions = { timeZone: 'UTC', month: 'short' }\n\n      return createNativeLocaleFormatter(\n        this.currentLocale,\n        (_tms, short) => short ? shortOptions : longOptions\n      )\n    },\n  },\n\n  methods: {\n    isOutside (day: CalendarTimestamp): boolean {\n      const dayIdentifier = getDayIdentifier(day)\n\n      return dayIdentifier < getDayIdentifier(this.parsedStart) ||\n             dayIdentifier > getDayIdentifier(this.parsedEnd)\n    },\n    genHead (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-weekly__head',\n      }, this.genHeadDays())\n    },\n    genHeadDays (): VNode[] {\n      const header = this.todayWeek.map(this.genHeadDay)\n\n      if (this.showWeek) {\n        header.unshift(this.$createElement('div', {\n          staticClass: 'v-calendar-weekly__head-weeknumber',\n        }))\n      }\n\n      return header\n    },\n    genHeadDay (day: CalendarTimestamp, index: number): VNode {\n      const outside = this.isOutside(this.days[index])\n      const color = day.present ? this.color : undefined\n\n      return this.$createElement('div', this.setTextColor(color, {\n        key: day.date,\n        staticClass: 'v-calendar-weekly__head-weekday',\n        class: this.getRelativeClasses(day, outside),\n      }), this.weekdayFormatter(day, this.shortWeekdays))\n    },\n    genWeeks (): VNode[] {\n      const days = this.days\n      const weekDays = this.parsedWeekdays.length\n      const weeks: VNode[] = []\n\n      for (let i = 0; i < days.length; i += weekDays) {\n        weeks.push(this.genWeek(days.slice(i, i + weekDays), this.getWeekNumber(days[i])))\n      }\n\n      return weeks\n    },\n    genWeek (week: CalendarTimestamp[], weekNumber: number): VNode {\n      const weekNodes = week.map((day, index) => this.genDay(day, index, week))\n\n      if (this.showWeek) {\n        weekNodes.unshift(this.genWeekNumber(weekNumber))\n      }\n\n      return this.$createElement('div', {\n        key: week[0].date,\n        staticClass: 'v-calendar-weekly__week',\n      }, weekNodes)\n    },\n    getWeekNumber (determineDay: CalendarTimestamp) {\n      return weekNumber(\n        determineDay.year,\n        determineDay.month - 1,\n        determineDay.day,\n        this.parsedWeekdays[0],\n        parseInt(this.localeFirstDayOfYear)\n      )\n    },\n    genWeekNumber (weekNumber: number) {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-weekly__weeknumber',\n      }, [\n        this.$createElement('small', String(weekNumber)),\n      ])\n    },\n    genDay (day: CalendarTimestamp, index: number, week: CalendarTimestamp[]): VNode {\n      const outside = this.isOutside(day)\n\n      return this.$createElement('div', {\n        key: day.date,\n        staticClass: 'v-calendar-weekly__day',\n        class: this.getRelativeClasses(day, outside),\n        on: this.getDefaultMouseEventHandlers(':day', _e => day),\n      }, [\n        this.genDayLabel(day),\n        ...(getSlot(this, 'day', () => ({ outside, index, week, ...day })) || []),\n      ])\n    },\n    genDayLabel (day: CalendarTimestamp): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-weekly__day-label',\n      }, getSlot(this, 'day-label', day) || [this.genDayLabelButton(day)])\n    },\n    genDayLabelButton (day: CalendarTimestamp): VNode {\n      const color = day.present ? this.color : 'transparent'\n      const hasMonth = day.day === 1 && this.showMonthOnFirst\n\n      return this.$createElement(VBtn, {\n        props: {\n          color,\n          fab: true,\n          depressed: true,\n          small: true,\n        },\n        on: this.getMouseEventHandlers({\n          'click:date': { event: 'click', stop: true },\n          'contextmenu:date': { event: 'contextmenu', stop: true, prevent: true, result: false },\n        }, _e => day),\n      }, hasMonth\n        ? this.monthFormatter(day, this.shortMonths) + ' ' + this.dayFormatter(day, false)\n        : this.dayFormatter(day, false)\n      )\n    },\n    genDayMonth (day: CalendarTimestamp): VNode | string {\n      const color = day.present ? this.color : undefined\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-calendar-weekly__day-month',\n      }), getSlot(this, 'day-month', day) || this.monthFormatter(day, this.shortMonths))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: this.staticClass,\n      class: this.classes,\n      on: {\n        dragstart: (e: MouseEvent) => {\n          e.preventDefault()\n        },\n      },\n    }, [\n      !this.hideHeader ? this.genHead() : '',\n      ...this.genWeeks(),\n    ])\n  },\n})\n"],"sourceRoot":"","file":"VCalendarWeekly.js"}                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     import { WebSocketSubject, WebSocketSubjectConfig } from './WebSocketSubject';

/**
 * Wrapper around the w3c-compatible WebSocket object provided by the browser.
 *
 * <span class="informal">{@link Subject} that communicates with a server via WebSocket</span>
 *
 * `webSocket` is a factory function that produces a `WebSocketSubject`,
 * which can be used to make WebSocket connection with an arbitrary endpoint.
 * `webSocket` accepts as an argument either a string with url of WebSocket endpoint, or an
 * {@link WebSocketSubjectConfig} object for providing additional configuration, as
 * well as Observers for tracking lifecycle of WebSocket connection.
 *
 * When `WebSocketSubject` is subscribed, it attempts to make a socket connection,
 * unless there is one made already. This means that many subscribers will always listen
 * on the same socket, thus saving resources. If however, two instances are made of `WebSocketSubject`,
 * even if these two were provided with the same url, they will attempt to make separate
 * connections. When consumer of a `WebSocketSubject` unsubscribes, socket connection is closed,
 * only if there are no more subscribers still listening. If after some time a consumer starts
 * subscribing again, connection is reestablished.
 *
 * Once connection is made, whenever a new message comes from the server, `WebSocketSubject` will emit that
 * message as a value in the stream. By default, a message from the socket is parsed via `JSON.parse`. If you
 * want to customize how deserialization is handled (if at all), you can provide custom `resultSelector`
 * function in {@link WebSocketSubject}. When connection closes, stream will complete, provided it happened without
 * any errors. If at any point (starting, maintaining or closing a connection) there is an error,
 * stream will also error with whatever WebSocket API has thrown.
 *
 * By virtue of being a {@link Subject}, `WebSocketSubject` allows for receiving and sending messages from the server. In order
 * to communicate with a connected endpoint, use `next`, `error` and `complete` methods. `next` sends a value to the server, so bear in mind
 * that this value will not be serialized beforehand. Because of This, `JSON.stringify` will have to be called on a value by hand,
 * before calling `next` with a result. Note also that if at the moment of nexting value
 * there is no socket connection (for example no one is subscribing), those values will be buffered, and sent when connection
 * is finally established. `complete` method closes socket connection. `error` does the same,
 * as well as notifying the server that something went wrong via status code and string with details of what happened.
 * Since status code is required in WebSocket API, `WebSocketSubject` does not allow, like regular `Subject`,
 * arbitrary values being passed to the `error` method. It needs to be called with an object that has `code`
 * property with status code number and optional `reason` property with string describing details
 * of an error.
 *
 * Calling `next` does not affect subscribers of `WebSocketSubject` - they have no
 * information that something was sent to the server (unless of course the server
 * responds somehow to a message). On the other hand, since calling `complete` triggers
 * an attempt to close socket connection. If that connection is closed without any errors, stream will
 * complete, thus notifying all subscribers. And since calling `error` closes
 * socket connection as well, just with a different status code for the server, if closing itself proceeds
 * without errors, subscribed Observable will not error, as one might expect, but complete as usual. In both cases
 * (calling `complete` or `error`), if process of closing socket connection results in some errors, *then* stream
 * will error.
 *
 * **Multiplexing**
 *
 * `WebSocketSubject` has an additional operator, not found in other Subjects. It is called `multiplex` and it is
 * used to simulate opening several socket connections, while in reality maintaining only one.
 * For example, an application has both chat panel and real-time notifications about sport news. Since these are two distinct functions,
 * it would make sense to have two separate connections for each. Perhaps there could even be two separate services with WebSocket
 * endpoints, running on separate machines with only GUI combining them together. Having a socket connection
 * for each functionality could become too resource expensive. It is a common pattern to have single
 * WebSocket endpoint that acts as a gateway for the other services (in this case chat and sport news services).
 * Even though there is a single connection in a client app, having the ability to manipulate streams as if it
 * were two separate sockets is desirable. This eliminates manually registering and unregistering in a gateway for
 * given service and filter out messages of interest. This is exactly what `multiplex` method is for.
 *
 * Method accepts three parameters. First two are functions returning subscription and unsubscription messages
 * respectively. These are messages that will be sent to the server, whenever consumer of resulting Observable
 * subscribes and unsubscribes. Server can use them to verify that some kind of messages should start or stop
 * being forwarded to the client. In case of the above example application, after getting subscription message with proper identifier,
 * gateway server can decide that it should connect to real sport news service and start forwarding messages from it.
 * Note that both messages will be sent as returned by the functions, they are by default serialized using JSON.stringify, just
 * as messages pushed via `next`. Also bear in mind that these messages will be sent on *every* subscription and
 * unsubscription. This is potentially dangerous, because one consumer of an Observable may unsubscribe and the server
 * might stop sending messages, since it got unsubscription message. This needs to be handled
 * on the server or using {@link publish} on a Observable returned from 'multiplex'.
 *
 * Last argument to `multiplex` is a `messageFilter` function which should return a boolean. It is used to filter out messages
 * sent by the server to only those that belong to simulated WebSocket stream. For example, server might mark these
 * messages with some kind of string identifier on a message object and `messageFilter` would return `true`
 * if there is such identifier on an object emitted by the socket. Messages which returns `false` in `messageFilter` are simply skipped,
 * and are not passed down the stream.
 *
 * Return value of `multiplex` is an Observable with messages incoming from emulated socket connection. Note that this
 * is not a `WebSocketSubject`, so calling `next` or `multiplex` again will fail. For pushing values to the
 * server, use root `WebSocketSubject`.
 *
 * ### Examples
 * #### Listening for messages from the server
 * ```ts
 * import { webSocket } from "rxjs/webSocket";
 * const subject = webSocket("ws://localhost:8081");
 *
 * subject.subscribe(
 *    msg => console.log('message received: ' + msg), // Called whenever there is a message from the server.
 *    err => console.log(err), // Called if at any point WebSocket API signals some kind of error.
 *    () => console.log('complete') // Called when connection is closed (for whatever reason).
 *  );
 * ```
 *
 * #### Pushing messages to the server
 * ```ts
 * import { webSocket } from "rxjs/webSocket";
 * const subject = webSocket('ws://localhost:8081');
 *
 * subject.subscribe();
 * // Note that at least one consumer has to subscribe to the created subject - otherwise "nexted" values will be just buffered and not sent,
 * // since no connection was established!
 *
 * subject.next({message: 'some message'});
 * // This will send a message to the server once a connection is made. Remember value is serialized with JSON.stringify by default!
 *
 * subject.complete(); // Closes the connection.
 *
 * subject.error({code: 4000, reason: 'I think our app just broke!'});
 * // Also closes the connection, but let's the server know that this closing is caused by some error.
 * ```
 *
 * #### Multiplexing WebSocket
 * ```ts
 * import { webSocket } from "rxjs/webSocket";
 * const subject = webSocket('ws://localhost:8081');
 *
 * const observableA = subject.multiplex(
 *   () => ({subscribe: 'A'}), // When server gets this message, it will start sending messages for 'A'...
 *   () => ({unsubscribe: 'A'}), // ...and when gets this one, it will stop.
 *   message => message.type === 'A' // If the function returns `true` message is passed down the stream. Skipped if the function returns false.
 * );
 *
 * const observableB = subject.multiplex( // And the same goes for 'B'.
 *   () => ({subscribe: 'B'}),
 *   () => ({unsubscribe: 'B'}),
 *   message => message.type === 'B'
 * );
 *
 * const subA = observableA.subscribe(messageForA => console.log(messageForA));
 * // At this moment WebSocket connection is established. Server gets '{"subscribe": "A"}' message and starts sending messages for 'A',
 * // which we log here.
 *
 * const subB = observableB.subscribe(messageForB => console.log(messageForB));
 * // Since we already have a connection, we just send '{"subscribe": "B"}' message to the server. It starts sending messages for 'B',
 * // which we log here.
 *
 * subB.unsubscribe();
 * // Message '{"unsubscribe": "B"}' is sent to the server, which stops sending 'B' messages.
 *
 * subA.unsubscribe();
 * // Message '{"unsubscribe": "A"}' makes the server stop sending messages for 'A'. Since there is no more subscribers to root Subject,
 * // socket connection closes.
 * ```
 *
 *
 * @param {string|WebSocketSubjectConfig} urlConfigOrSource The WebSocket endpoint as an url or an object with
 * configuration and additional Observers.
 * @return {WebSocketSubject} Subject which allows to both send and receive messages via WebSocket connection.
 */
export function webSocket<T>(urlConfigOrSource: string | WebSocketSubjectConfig<T>): WebSocketSubject<T> {
  return new WebSocketSubject<T>(urlConfigOrSource);
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   {"version":3,"sources":["../../../src/components/VStepper/VStepper.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VStepper.sass'\n\n// Components\nimport VStepperStep from './VStepperStep'\nimport VStepperContent from './VStepperContent'\n\n// Mixins\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  RegistrableProvide('stepper'),\n  Proxyable,\n  Themeable\n)\n\ntype VStepperStepInstance = InstanceType<typeof VStepperStep>\ntype VStepperContentInstance = InstanceType<typeof VStepperContent>\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-stepper',\n\n  provide (): object {\n    return {\n      stepClick: this.stepClick,\n      isVertical: this.vertical,\n    }\n  },\n\n  props: {\n    altLabels: Boolean,\n    nonLinear: Boolean,\n    vertical: Boolean,\n  },\n\n  data () {\n    const data: Dictionary<any> = {\n      isBooted: false,\n      steps: [] as VStepperStepInstance[],\n      content: [] as VStepperContentInstance[],\n      isReverse: false,\n    }\n\n    data.internalLazyValue = this.value != null\n      ? this.value\n      : (data[0] || {}).step || 1\n\n    return data\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-stepper--is-booted': this.isBooted,\n        'v-stepper--vertical': this.vertical,\n        'v-stepper--alt-labels': this.altLabels,\n        'v-stepper--non-linear': this.nonLinear,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val, oldVal) {\n      this.isReverse = Number(val) < Number(oldVal)\n\n      oldVal && (this.isBooted = true)\n\n      this.updateView()\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$listeners.input) {\n      breaking('@input', '@change', this)\n    }\n  },\n\n  mounted () {\n    this.updateView()\n  },\n\n  methods: {\n    register (item: VStepperStepInstance | VStepperContentInstance) {\n      if (item.$options.name === 'v-stepper-step') {\n        this.steps.push(item as VStepperStepInstance)\n      } else if (item.$options.name === 'v-stepper-content') {\n        (item as VStepperContentInstance).isVertical = this.vertical\n        this.content.push(item as VStepperContentInstance)\n      }\n    },\n    unregister (item: VStepperStepInstance | VStepperContentInstance) {\n      if (item.$options.name === 'v-stepper-step') {\n        this.steps = this.steps.filter((i: VStepperStepInstance) => i !== item)\n      } else if (item.$options.name === 'v-stepper-content') {\n        (item as VStepperContentInstance).isVertical = this.vertical\n        this.content = th